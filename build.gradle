// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    apply from: 'dependencies.gradle'

    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.2'
        classpath deps.kotlin.plugin
        classpath 'com.google.gms:google-services:4.3.10'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.7.1'
//        classpath 'com.google.firebase:perf-plugin:1.4.0'  // Performance Monitoring plugin
        classpath deps.androidx.navigation.plugin
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.0"
        classpath "org.jacoco:org.jacoco.core:0.8.7"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

apply from: "$rootDir/sonar.gradle"

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }

    configurations.all {
        resolutionStrategy {
            force "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
            force "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
            force "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
            force "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
        }
    }
}

subprojects {

    def flavorsConfig = {
        apply from: "$rootDir/flavor.gradle"

        android {
            lintOptions {
                xmlReport true
            }
        }
    }
    pluginManager.withPlugin("com.android.application", flavorsConfig)
    pluginManager.withPlugin("com.android.library", flavorsConfig)

    apply from: "$rootDir/config/detekt/detekt.gradle"
    apply from: "$rootDir/config/ktlint/ktlint.gradle"

    apply from: "$rootDir/jacoco.gradle"

    sonarqube {
        properties  {
            property "sonar.androidLint.reportPaths", "$buildDir/reports/lint-results.xml"
            property "sonar.coverage.jacoco.xmlReportPaths", "$buildDir/reports/jacoco/**/*.xml"
        }
    }

}

task clean(type: Delete) {
    delete rootProject.buildDir
}
